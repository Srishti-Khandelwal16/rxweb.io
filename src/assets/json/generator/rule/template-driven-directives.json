{"rightSidebarLinks":[{"id":"rule","title":"rule (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicrulevalidation","title":"Basic rule Validation","subLink":[]},{"id":"ruleconfig","title":"RuleConfig","subLink":[{"title":"customRules","id":"customrules","thirdLevelLink":[]},{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]}]},{"id":"completeruleexample","title":"Complete rule Example","subLink":[]},{"id":"githubissues","title":"rule Github Issues","subLink":null}],"title":"rule","description":"Rule validation template driven will allow the user to set custom rules on a particular field.","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/rule.md","category":"form-validations","subCategory":null,"linkTitle":"rule","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-rule-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"rule-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"rule-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"rule-complete-html\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>rule</p></div> <div class=\"title-bar\"><p>rule validation template driven will allow the user to set custom rules on a particular field.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create an Address Info form, which contains fields like Zipcode, countryName, stateName, cityName and colonyName and you want the user to enter value based upon your custom rules. Here depending upon the requirement, these scenarios may arise..</p>\r\n<ol class='showHideElement'>\r\n  <li>Allow colonyName which is based on the custom rules.</li>\r\n  <li>Apply rule validation on stateNAme field based on matched condition in the form, like if the Zipcode is '4000', then the stateName must be a according to the rule (Used as a function).</li>\r\n  <li>Apply rule validation on cityNAme field based on matched condition in the form, like if the Zipcode is '4000', then the cityName must be a according to the rule (Used as a function).</li>\r\n</ol>\r\n<p class='showHideElement' >Let's see how rule template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicrulevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic rule Validation<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#basicrulevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a Address Model and define a property of zipCode and colonyName in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"rule-add-model\"></div>\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations.</p>\r\n<div component=\"app-code\" key=\"rule-add-component\"></div>\r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"rule-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-rule-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'ruleconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >RuleConfig<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#ruleconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@rule()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#customRules\")' title=\"customRules\">customRules</a></td><td>customRules are used to set custom rules on a particular field.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>rule validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'customrules'>\r\n<div class='col-lg-12'>\r\n<h2>customRules<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#customrules'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function[]</span> </p>\r\n<p class='showHideElement' >customRules are used to set custom rules on a particular field.</p>\r\n<div component=\"app-code\" key=\"rule-customRulesExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-rule-customRules\" title=\"rule template driven with customRules\" key=\"customRules\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >rule validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"rule-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"rule-conditionalExpressionExampleString-model\"></div>\r\n<div component=\"app-example-runner\" ref-component=\"app-rule-conditionalExpression\" title=\"rule template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeruleexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete rule Example<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/directives#completeruleexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete rule example which includes all the ArrayConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/rule/template-driven/decorators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}