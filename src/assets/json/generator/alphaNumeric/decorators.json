{"rightSidebarLinks":[{"id":"alphanumeric","title":"alphaNumeric (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicalphanumericvalidation","title":"Basic AlphaNumeric Validation","subLink":[]},{"id":"alphaconfig","title":"AlphaConfig","subLink":[{"title":"locale","id":"locale","thirdLevelLink":[]},{"title":"allowWhiteSpace","id":"allowwhitespace","thirdLevelLink":[]},{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completealphanumericexample","title":"Complete AlphaNumeric Example","subLink":[]},{"id":"dynamicalphanumericexample","title":"Dynamic AlphaNumeric Example","subLink":[]},{"id":"githubissues","title":"alphaNumeric Github Issues","subLink":null}],"title":"alphaNumeric","description":"Alpha Numeric validation decorators will allow only alphabets and numbers to be entered. It will not allow any special character.","validatorType":"decorators","validationTypeTitle":"Decorators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/alphaNumeric.md","category":"form-validations","subCategory":"String","linkTitle":"alphaNumeric","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-edit-component\"></div> \r\n<p class='showHideElement' >The below default data which is coming from the server in this example of edit form which is set in the `location-data.json` in json format like this:</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-edit-json\"></div>  \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>alphaNumeric</p></div> <div class=\"title-bar\"><p>alphaNumeric validation decorator will allow only alphabets and numbers to be entered. It will not allow any special character.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Location form, which contains fields like AreaName, FlatAddress, PostalAddress, countryCode, CityCode and you want the user to enter only alphabets and numbers. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow only alphabets and numbers in AreaName without space.</li>\r\n    <li>Allowing WhiteSpace in FlatAddress.</li>\r\n    <li>Apply alphaNumeric validation based on matched condition in the form, like if the AreaName is <span class='highlighted'>Delhi</span> then the countryCode value should be in alphabets and numbers.</li>\r\n    <li>Apply alphaNumeric validation based on matched condition in the form, like if the AreaName is <span class='highlighted'>Delhi</span> then the CityCode value should be in alphabets and numbers.</li>\r\n    <li>Adding Custom Message on PostalAddress Field.</li>\r\n    <li>Shows the custom message on <span class='highlighted'>Colony Name</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n        <li>Apply alphaNumeric validation dynamically based on server rules. </li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how alphaNumeric decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicalphanumericvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic AlphaNumeric Validation<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#basicalphanumericvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a Location class and define a property of AreaName in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'alphaconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >AlphaConfig<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#alphaconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@alphaNumeric()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#locale\")' title=\"locale\">locale</a></td><td>This will allow multilingual characters based upon the specified validation alphabet locale.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#allowwhitespace\")' title=\"allowWhiteSpace\">allowWhiteSpace</a></td><td>This will allow whitespace in particular control property. The default value is <span class='highlighted'>false</span>.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>AlphaNumeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'locale'>\r\n<div class='col-lg-12'>\r\n<h2>locale<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#locale'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>String</span></p>\r\n<p class='showHideElement' >This will allow multilingual characters based upon the specified validation alphabet locale. It can be set to Spanish, danish, french, german, russian.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-localeExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-locale\" title=\"alphaNumeric decorator with locale\" key=\"locale\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'allowwhitespace'>\r\n<div class='col-lg-12'>\r\n<h2>allowWhiteSpace<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#allowwhitespace'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>boolean</span> </p>\r\n<p class='showHideElement' >This will allow whitespace in particular FormControl value .The default value is <span class='highlighted'>false</span>.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-allowWhiteSpaceExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-allowWhiteSpace\" title=\"AlphaNumeric decorator with allowWhiteSpace\" key=\"allowWhiteSpace\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >AlphaNumeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"alphaNumeric-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"alphaNumeric-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-conditionalExpression\" title=\"AlphaNumeric decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-message\" title=\"AlphaNumeric decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-messageKey\" title=\"alphaNumeric decorator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completealphanumericexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete AlphaNumeric Example<a title='Link to this heading' class='link-header'  href='/form-validations/alphaNumeric/decorators#completealphanumericexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete AlphaNumeric example which includes all the AlphaConfig properties will fulfil the requirement of scenarios 1, 2, 3, 4 and 5.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicalphanumericexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic AlphaNumeric Example<a title='Link to this heading' class='link-header' href='/form-validations/alphaNumeric/decorators#dynamicalphanumericexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic AlphaNumeric example is executed on the basis of json passed in the formBuilderConfiguration which comes under <span class='highlighted'>RxFormBuilder</span> of reactive-form-validators. <span class='highlighted'>conditionalExpression</span> with function would not be applied in dynamic alphaNumeric example. This example will fulfil the requirement of our last point.</p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/alphaNumeric/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}