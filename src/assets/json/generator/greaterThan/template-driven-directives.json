{"rightSidebarLinks":[{"id":"greaterthan","title":"greaterThan (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicgreaterthanvalidation","title":"Basic GreaterThan Validation","subLink":[]},{"id":"relationaloperatorconfig","title":"RelationalOperatorConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"fieldName","id":"fieldname","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]},{"title":"value","id":"value","thirdLevelLink":[]}]},{"id":"completegreaterthanexample","title":"Complete greaterThan Example","subLink":[]},{"id":"githubissues","title":"greaterThan Github Issues","subLink":null}],"title":"greaterThan","description":"Greater than validation template driven will check that user's input is greater than related field input.","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/greaterThan.md","category":"form-validations","subCategory":null,"linkTitle":"greaterThan","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-greaterThan-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"greaterThan-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"greaterThan-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"greaterThan-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>greaterThan</p></div> <div class=\"title-bar\"><p>greater than validation template driven will check that user's input is greater than related field input.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like Age, RetirementAge, MemberAge, VoterAge, OtherAge and you want the user to enter input which is greater than a related field input. Here depending upon the requirement these scenarios may arise.   </p>\r\n<ol class='showHideElement'>\r\n  <li>Apply greaterThan validation on retiermentAge based on fieldName.</li>\r\n  <li>Allow numbers which are greater than a perticular field like in VoterAge.</li>\r\n  <li>Apply greaterThan validation based on matched condition in the form, like if the Age is greater than 17, then only the greater than validation will be applied to Member Age field (Conditional Expression with Function).</li>\r\n  <li>Apply greaterThan validation based on matched condition in the form, like if the Age is greater than 17, then only the greater than validation will be applied to VoterAge field (Conditional Expression with String).</li>\r\n  <li>Adding Custom Message on OtherAge Field.</li>\r\n  <li>Shows the custom message on <span class='highlighted'>Joining Age</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n  <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply greaterThan validation dynamically based on server rules.</li>\r\n  </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how greaterThan template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicgreaterthanvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic GreaterThan Validation<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#basicgreaterthanvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of Age and VoterAge with the requirement of VoterAge must be greater than Age field in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"greaterThan-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"greaterThan-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"greaterThan-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'relationaloperatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >RelationalOperatorConfig<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#relationaloperatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>greaterThan</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>GreaterThan validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#fieldname\")' title=\"fieldname\">fieldname</a></td><td>Greater than validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td>Greater than validation provides <span class='highlighted'>value</span> property which is used To validate the formControl based upon configured static value.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >GreaterThan validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"greaterThan-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-conditionalExpression\" title=\"greaterThan template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#fieldname'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Greater than validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value </p>\r\n<div component=\"app-code\" key=\"greaterThan-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-fieldName\" title=\"greaterThan template driven with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"greaterThan-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-message\" title=\"greaterThan template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"greaterThan-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-messageKey\" title=\"greaterThan template driven with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>number</span></p>\r\n<p class='showHideElement' >Greater than validation provides <span class='highlighted'>value</span> property which is used To validate the formControl based upon configured static value.</p>\r\n<div component=\"app-code\" key=\"greaterThan-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThan-value\" title=\"greaterThan template driven with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completegreaterthanexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete greaterThan Example<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/directives#completegreaterthanexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete greaterThan example which includes all the RelationalOperatorConfig properties will fulfil the requirement of scenarios 1, 2, and 3</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/greaterThan/template-driven/decorators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}