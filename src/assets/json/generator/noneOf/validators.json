{"rightSidebarLinks":[{"id":"noneof","title":"noneOf (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicnoneofvalidation","title":"Basic noneOf Validation","subLink":[]},{"id":"arrayconfig","title":"ArrayConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"matchValues","id":"matchvalues","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"nonarrayvalue","title":"Non Array Value","subLink":[]},{"id":"completenoneofexample","title":"Complete noneOf Example","subLink":[]},{"id":"dynamicnoneofexample","title":"Dynamic noneOf Example","subLink":[]},{"id":"githubissues","title":"noneOf Github Issues","subLink":null}],"title":"noneOf","description":"noneOf validation  validators  will check whether the none of the values is selected from the given inputs.","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/noneOf.md","category":"form-validations","subCategory":"Array","linkTitle":"noneOf","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-noneOf-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"noneOf-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"noneOf-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-noneOf-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"noneOf-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"noneOf-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"noneOf-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>noneOf</p></div> <div class=\"title-bar\"><p>noneOf validation  validator  will check whether the none of the values is selected from the given inputs.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Let's assume that you are creating a employee form in which you want employee to enter none of the value of a particular value which contains fields like department, hobbies and skills.Here the field is taken in the form of array and according to that the choice is applied on the property by applying matchvalues. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n\t<li>The skills field in which you want the user to enter skills based upon matchvalues.</li>\r\n    <li>Apply noneOf validation based on matched condition in the form, like if the department  is ‘dotnet’ then the skills value should be based upon matchvalues.</li>\r\n    <li>The Custom Message on Hobbies field.</li>\r\n    <li>Shows the custom message on <span class='highlighted'>languages</span> field by using <span class='highlighted'>messageKey</span> property.</li> \r\n    <data-scope scope=\"['decorator','validator']\">\r\n \t<li>Apply noneOf validation dynamically based on server rules.</li>\r\n     </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how noneOf validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicnoneofvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic noneOf Validation<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#basicnoneofvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operation.</p>\r\n<div component=\"app-code\" key=\"noneOf-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"noneOf-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'arrayconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ArrayConfig<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#arrayconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.noneOf()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>noneOf validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#matchValues\")' title=\"matchValues\">matchValues</a></td><td>MatchValues is the array based on which the value is matched for validation. According to it none of the values in the array should be matched.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >noneOf validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"noneOf-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"noneOf-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-conditionalExpression\" title=\"noneOf validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'matchvalues'>\r\n<div class='col-lg-12'>\r\n<h2>matchValues<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#matchvalues'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>any[]</span> </p>\r\n<p class='showHideElement' >matchValues is the array based on which the value is matched for validation. According to it none of the values in the array should be matched</p>\r\n<div component=\"app-code\" key=\"oneOf-matchValuesExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-matchValues\" title=\"noneOf validator with matchValues\" key=\"matchValues\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"noneOf-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-message\" title=\"noneOf validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"noneOf-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-messageKey\" title=\"noneOf validator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'nonarrayvalue'>\r\n<div class='col-lg-12'>\r\n<h2>Non Array Value<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#nonarrayvalue'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >The noneOf validator can also validate the textbox value, which is a non array value. If any user enter the duplicate values, then the formControl should mark it as invalid.</p>\r\n<div component=\"app-code\" key=\"noneOf-nonArrayValueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-noneOf-nonArrayValue\" title=\"noneOf validator with nonArrayValue\" key=\"nonArrayValue\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completenoneofexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete noneOf Example<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#completenoneofexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete noneOf example which includes all the ArrayConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicnoneofexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic noneOf Example<a title='Link to this heading' class='link-header' href='/form-validations/noneOf/validators#dynamicnoneofexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic NoneOf example is executed on the basis of json passed in the formBuilderConfiguration which comes under <span class='highlighted'>RxFormBuilder</span> of reactive-form-validators. <span class='highlighted'>conditionalExpression</span> with function would not be applied in dynamic noneOf example. This example will fulfil the requirement of our last point.</p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/tabs/noneOf/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}