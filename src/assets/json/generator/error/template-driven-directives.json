{"rightSidebarLinks":[{"id":"error","title":"error (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicerrordecorator","title":"Basic error decorator","subLink":[]},{"id":"githubissues","title":"Show Error Message on Submit Github Issues","subLink":null}],"title":"Show Error Message on Submit","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"decorators","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/decorators/error.md","category":"decorators","subCategory":null,"linkTitle":"error","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/decorators/error/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Showing error messages conditionally is a bit clumsy on the UI. As a standard angular approach, we are putting *ngIf condition and write the error message. Once the condition is a success, then it will show the error message.</p>\r\n<p class='showHideElement' >Here, we will manage the error message through the @error decorator. Where we have to set the conditional expressions.</p>\r\n<p class='showHideElement' >Let's see how to show the error messages conditionally.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicerrordecorator'>\r\n<div class='col-lg-12'>\r\n<h2>Basic error decorator<a title='Link to this heading' class='link-header' href='/decorators/error/template-driven/directives#basicerrordecorator'><i class='fa fa-link'></i></a></h2>\r\n\r\n<blockquote class='showHideElement' ><p>Scenario : In our reactive form, we have two fields firstName and userName. The primary requirement is the submit is not disabled, whenever the user clicks on the submit at that time, it will show the error message of invalid form fields.</p></blockquote>\r\n<p class='showHideElement' >To Configure message globally in your application, Please refer <a href=\"/api/reactive-form-config\"><span class='highlighted'>ReactiveFormConfig</span></a></p>\r\n<p class='showHideElement' >let's create a user model and define a property of freeText in the model.</p>\r\n<div component=\"app-code\" key=\"error-add-model\"></div> \r\n<p class='showHideElement' >You have to use RxFormBuilder service to create FormGroup in the component.</p>\r\n<div component=\"app-code\" key=\"error-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code. For showing error message you have to use 'errorMessage' property.</p>\r\n<div component=\"app-code\" key=\"error-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-error-add\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/decorators/error/template-driven/decorators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}