{"rightSidebarLinks":[{"id":"cusip","title":"cusip (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiccusipvalidation","title":"Basic Cusip Validation","subLink":[]},{"id":"baseconfig","title":"BaseConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completecusipexample","title":"Complete Cusip Example","subLink":[]},{"id":"githubissues","title":"cusip Github Issues","subLink":null}],"title":"cusip","description":"CUSIP validation template driven will allow user to enter only nine-character alpha-numeric cusip code. CUSIP numbers are used to identify North-American finantial securities.","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/cusip.md","category":"form-validations","subCategory":null,"linkTitle":"cusip","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-cusip-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"cusip-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"cusip-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"cusip-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>cusip</p></div> <div class=\"title-bar\"><p>cusip validation template driven will allow user to enter only nine-character alpha-numeric cusip code. CUSIP numbers are used to identify North-American finantial securities.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a CompanyInfo form, which contain fields like CompanyName, OracleCorporationCusipCode, GoogleIncCusipCode, MicrosoftCorporationCusipCode and AppleIncCusipCode, and you want the user to enter a valid 9-character alpha-numeric CUSIP code. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow user to enter only cusip code in <span class='highlighted'>OracleCorporationCusipCode</span>.</li>\r\n    <li>Apply cusip validation based on matched condition in the form, like if the <span class='highlighted'>CompanyName</span> is <span class='highlighted'>Google</span> then the <span class='highlighted'>GoogleIncCusipCode</span> value should be a cusip code (conditional validation with function).</li>\r\n    <li>Apply cusip validation based on matched condition in the form, like if the <span class='highlighted'>CompanyName</span> is <span class='highlighted'>Microsoft</span> then the <span class='highlighted'>MicrosoftCorporationCusipCode</span> value should be a cusip code (conditional validation with string).</li>\r\n    <li>Apply custom message on <span class='highlighted'>AppleIncCusipCode</span> Field.</li>\r\n    <li>Shows the custom message on <span class='highlighted'>AmazonCorporationCusipCode</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n\t\t  <li>Apply cusip validation dynamically based on server rules. </li>\r\n\t  </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how cusip template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basiccusipvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Cusip Validation<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#basiccusipvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a CompanyInfo class and define a property of OracleCorporationCusipCode in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"cusip-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"cusip-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"cusip-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-cusip-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'baseconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >BaseConfig<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#baseconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>cusip</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a   (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Cusip validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")'  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Cusip validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"cusip-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-cusip-conditionalExpression\" title=\"cusip template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"cusip-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-cusip-message\" title=\"cusip template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"cusip-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-cusip-messageKey\" title=\"cusip template driven with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completecusipexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Cusip Example<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/directives#completecusipexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Cusip example which includes all the BaseConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/cusip/template-driven/decorators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}