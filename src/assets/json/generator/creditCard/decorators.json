{"rightSidebarLinks":[{"id":"creditcard","title":"creditCard (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiccreditcardvalidation","title":"Basic CreditCard Validation","subLink":[]},{"id":"creditcardconfig","title":"CreditCardConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"creditCardTypes","id":"creditcardtypes","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completecreditcardexample","title":"Complete CreditCard Example","subLink":[]},{"id":"dynamiccreditcardexample","title":"Dynamic CreditCard Example","subLink":[]},{"id":"githubissues","title":"creditCard Github Issues","subLink":null}],"title":"creditCard","description":"creditCard validation decorators will check property value is creditcardtype or not. It will not allow to enter any value other than credit card format.","validatorType":"decorators","validationTypeTitle":"Decorators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/creditCard.md","category":"form-validations","subCategory":"","linkTitle":"creditCard","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"creditCard-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-creditCard-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-edit-component\"></div> \r\n<p class='showHideElement' >The below default data which is coming from the server in this example of edit form which is set in the `user-data.json` in json format like this:</p>\r\n<div component=\"app-code\" key=\"creditCard-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"creditCard-edit-html\"></div>\r\n<div component=\"app-example-runner\" ref-component=\"app-creditCard-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-creditCard-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-creditCard-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"creditCard-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>creditCard</p></div> <div class=\"title-bar\"><p>creditCard validation decorator will check property value is creditcardtype or not. It will not allow to enter any value other than credit card format.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Supppose you want to create a user form in which you want CreditCard details and you have fields like CardType, VisaCard, AmericanExpress,MaestroCard, JCBcard, DiscoverCard, MasterCard  Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>  \r\n    <li>CreditCard Type has different Card Types like Visa, AmericanExpress, Maestro, JCB, Discover, DinersClub, MasterCard.</li>\r\n    <li>Apply CreditCard validation based on matched condition in the form, like if the CardType  is <span class='highlighted'>visa</span> then the VisaCard value should be in VisaCard format.</li>\r\n    <li>Display the Custom Message on VisaCard field.  </li>\r\n    <li>Shows the custom message on <span class='highlighted'>Other Master Card</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n      <li>Apply creditCard validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how credit card decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basiccreditcardvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic CreditCard Validation<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#basiccreditcardvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create User model class define a property of CreditCardNo in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"creditCard-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'creditcardconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >CreditCardConfig<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#creditcardconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@creditCard()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>CreditCard validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#creditCardTypes\")' title=\"creditCardTypes\">creditCardTypes</a></td><td>CreditCardTypes is used to define the type of CreditCard enterred by user.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >Credit Card validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"creditCard-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"creditCard-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-creditCard-conditionalExpression\" title=\"creditCard decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'creditcardtypes'>\r\n<div class='col-lg-12'>\r\n<h2>creditCardTypes<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#creditcardtypes'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string[]</span> </p>\r\n<p class='showHideElement' >CreditCardTypes is used to define the type of CreditCard enterred by user.</p>\r\n<div component=\"app-code\" key=\"creditCard-creditCardTypesExample-model\"></div> \r\n<p class='showHideElement' >Please refer creditcard with complete example which contains creditcardTypes parameter.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl </p>\r\n<div component=\"app-code\" key=\"creditCard-messageExample-model\"></div>\r\n<div component=\"app-example-runner\" ref-component=\"app-creditCard-message\" title=\"creditCard decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"creditCard-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-creditCard-messageKey\" title=\"creditCard decorator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completecreditcardexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete CreditCard Example<a title='Link to this heading' class='link-header'  href='/form-validations/creditCard/decorators#completecreditcardexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete CreditCard example which includes all the CreditCardConfig properties will fulfil the requirement of scenarios 1, 2 and 3 </p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamiccreditcardexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic CreditCard Example<a title='Link to this heading' class='link-header' href='/form-validations/creditCard/decorators#dynamiccreditcardexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic CreditCard example is executed on the basis of json passed in the formBuilderConfiguration which comes under <span class='highlighted'>RxFormBuilder</span> of reactive-form-validators. <span class='highlighted'>conditionalExpression</span> with function would not be applied in dynamic creditCard example. This example will fulfil the requirement of our last point.</p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/creditCard/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}