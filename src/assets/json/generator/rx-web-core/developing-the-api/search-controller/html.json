{"rightSidebarLinks":[{"id":"search-controller","title":"SearchController","subLink":null},{"id":"searchcontroller","title":"Search Controller","subLink":[{"title":"Generate a Search Controller","id":"generateasearchcontroller","thirdLevelLink":[]},{"title":"Methods","id":"methods","thirdLevelLink":[]},{"title":"Example","id":"example","thirdLevelLink":[]}]}],"title":"SearchController","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/developing-the-api/search-controller.md","category":"rxwebcore","subCategory":"developing-the-api","linkTitle":"search-controller","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'searchcontroller'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Search Controller</h1>\r\n\r\n<p class='showHideElement' >Displaying list of the data tuples in the user interface requires a <span class='highlighted'>search</span> operation when there is large number of records retrieved.</p>\r\n<p class='showHideElement' >This involves faster search result fetching from the server which is a part of defining the application efficiency, This can be achieved by making a search controller, prior to it there must be a stored procedure which returns <span class='highlighted'>json</span> and passes to the client side without involving of the web server.</p>\r\n<p class='showHideElement' >The controller will have a predefined route which include the controller name. For example: <span class='highlighted'>[Route(\"api/UsersSearchController\")]</span> </p>\r\n<blockquote class='showHideElement' ><p>Name of that basic controller must have a suffix \"Controller\". For example: <span class='highlighted'>UsersSearchController</span>.</p></blockquote>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/HumanResourceApplication.Api/Controllers/Api/Search/Main/UsersSearchController.cs\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n</div></div>\r\n<div class='row page-section' id= 'generateasearchcontroller'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Generate a Search Controller</h2>\r\n\r\n<p class='showHideElement' >To create a search controller, open the <span class='highlighted'>Package Manager Console</span> and run the following command.</p>\r\n<blockquote class='showHideElement' ><p>rxwebcore --controller --search --main &ltController_Name&gt --uow &ltModule_Name&gt --spname &ltName_of_stored_procedure&gt</p></blockquote>\r\n<p class='showHideElement' >Lets consider a scenario where you want to create a <span class='highlighted'>UsersSearchController</span> in the <span class='highlighted'>OrdersModule</span>, you have to write:</p>\r\n<blockquote class='showHideElement' ><p>rxwebcore --controller --search --main Users --uow User --spname, \"spSearchUsers\"</p></blockquote>\r\n<p class='showHideElement' ><span class='highlighted'>UsersSearch</span> is the controller name and <span class='highlighted'>User</span> is the module name. It will create a controller <span class='highlighted'>UsersSearchController</span> in search folder of api in the project</p>\r\n</div></div>\r\n<div class='row page-section' id= 'methods'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Methods</h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>Method</th><th>Return Type</th><th>Request Params</th><th>Request Body</th><th>Response</th></tr>\r\n<tr><td>Post</td><td>IActionResult</td><td> - </td><td>searchParams</td><td>search result</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'example'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Example</h2>\r\n\r\n<p class='showHideElement' >In this example  <span class='highlighted'>MainSqlDbContext</span> is the context of <span class='highlighted'>UsersModule</span> which contains the <span class='highlighted'>spSearchUsers</span></p>\r\n<p class='showHideElement' >which is executing while fetching the search result which are retrieved by passing searchParams as dictionary object in the post method.</p>\r\n<div class='model-ts'><pre><code>\r\n[ApiController]\r\n[Route(\"api/[controller]\")]\r\npublic class UsersSearchController : ControllerBase\r\n    {\r\n        private IDbContextManager&ltMainSqlDbContext&gt DbContextManager { get; set; }\r\n        public UsersSearchController(IDbContextManager&ltMainSqlDbContext&gt dbContextManager) {\r\n            DbContextManager = dbContextManager;\r\n    }\r\n    [HttpPost]\r\n    public async Task&ltIActionResult&gt Post([FromBody]Dictionary&ltstring,string&gt searchParams)\r\n    {\r\n        var spParameters = new object[2];\r\n        spParameters[0] = new SqlParameter() { ParameterName = \"Query\", Value = searchParams[\"query\"] };\r\n        spParameters[1] = new SqlParameter() { ParameterName = \"UserId\", Value = UserClaim.UserId };\r\n        var result = await DbContextManager.StoreProc&ltStoreProcResult&gt(\"[dbo].spSearchUsers\", spParameters);\r\n        return Ok(result.SingleOrDefault()?.Result);\r\n    }\r\n}\r\n</code></pre></div>\r\n</div></div>\r\n"}