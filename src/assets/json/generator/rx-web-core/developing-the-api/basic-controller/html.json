{"rightSidebarLinks":[{"id":"basic-controller","title":"Basic Controller","subLink":null},{"id":"basiccontroller","title":"Basic Controller","subLink":[{"title":"Generate a Basic Controller","id":"generateabasiccontroller","thirdLevelLink":[]},{"title":"Methods","id":"methods","thirdLevelLink":[]},{"title":"Complete Example of Basic Controller","id":"completeexampleofbasiccontroller","thirdLevelLink":[]},{"title":"Acessing The Api","id":"acessingtheapi","thirdLevelLink":[]}]}],"title":"Basic Controller","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/developing-the-api/basic-controller.md","category":"rxwebcore","subCategory":"developing-the-api","linkTitle":"basic-controller","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'basiccontroller'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Basic Controller</h1>\r\n\r\n<p class='showHideElement' >When you want basic data operations without any complexity and need to modify any of the custom business logic, basic controller is made. It includes methods which are used for simple CRUD operations.</p>\r\n<p class='showHideElement' >The controller will be inherited from the class <span class='highlighted'>BaseController</span> in which  <span class='highlighted'>Model</span>, <span class='highlighted'>View</span> and <span class='highlighted'>RecordView</span> related to that entity are passed as a parameter. The controller will have a predefined route which include the controller name. For example: <span class='highlighted'>[Route(\"api/Candidates\")]</span></p>\r\n<p class='showHideElement' >The Candidate entity requires the basic data operations(Based upon the ResourceContext and ResourceUow created) to be done without addition of any custom business logic to be added. So we will generate a basic controller for the Candidate Entity of the ResourceModule.</p>\r\n<blockquote class='showHideElement' ><p>Name of that basic controller must have a suffix \"Controller\". For example: <span class='highlighted'>CandidatesController</span>.</p></blockquote>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/HumanResourceApplication.Api/Controllers/Api/CandidateModule/CandidatesController.cs\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n</div></div>\r\n<div class='row page-section' id= 'generateabasiccontroller'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Generate a Basic Controller</h2>\r\n\r\n<p class='showHideElement' >To Create a basic controller, open the <span class='highlighted'>Package Manager Console</span> and run the following command:</p>\r\n<blockquote class='showHideElement' ><p>rxwebcore --controller --basic --main &ltController_Name&gt --uow &ltModule_Name&gt</p></blockquote>\r\n<p class='showHideElement' >Let's consider a scenario where you want a <span class='highlighted'>CandidatesController</span> in the <span class='highlighted'>CandidateModule</span>, you have to write:</p>\r\n<blockquote class='showHideElement' ><p>rxwebcore --controller --basic --main Candidates --uow Candidate</p></blockquote>\r\n<p class='showHideElement' >In the above command, <span class='highlighted'>basic</span> is the type of controller, <span class='highlighted'>Candidates</span> is the name of the controller and <span class='highlighted'>Candidate</span> is the name of the module. This command will create a separate folder named as \"ResourceModule\" and add a basic controller named as \"CandidatesController\" under the Api section of the project. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'methods'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Methods</h2>\r\n\r\n<p class='showHideElement' ><span class='highlighted'>BaseController</span> contain various methods used for Data interaction such as Get, Put, Post, Patch and Delete which will use the methods of Uow to interact with data. These methods are always public methods of the Controller as the controller class methods must be publically accessible to the specific action of the of the Controller. </p>\r\n<p class='showHideElement' >There are mainly 6 methods used for the Basic Controller which needs to be there in the BaseController which are as follows: </p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>Method</th><th>Return Type</th><th>Request Params</th><th>Request Body</th><th>Response</th></tr>\r\n<tr><td>Get</td><td>IActionResult</td><td> - </td><td> - </td><td>complete list of that entity</td></tr>\r\n<tr><td>GetById</td><td>IActionResult</td><td>Id of that entity which you want to get</td><td> - </td><td>Single entity based on the id</td></tr>\r\n<tr><td>Post</td><td>IActionResult</td><td> - </td><td>New Entity object which you want to add</td><td>Ok()</td></tr>\r\n<tr><td>Put</td><td>IActionResult</td><td>Id of that entity which you want to update</td><td>Complete entity object with the specific change which you want to update</td><td>NoContent()</td></tr>\r\n<tr><td>Patch</td><td>IActionResult</td><td>Id of that entity which you want to update</td><td>entity object only with the specific change which you want to update in the form of <span class='highlighted'>JsonPatchDocument</span></td><td>NoContent()</td></tr>\r\n<tr><td>Delete</td><td>IActionResult</td><td>Id of that entity which you want to delete</td><td> - </td><td>NoContent()</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'completeexampleofbasiccontroller'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Complete Example of Basic Controller</h2>\r\n\r\n<p class='showHideElement' >Here is an example of a basic controller.</p>\r\n<div class='model-ts'><pre><code>\r\n    [ApiController]\r\n    [Route(\"api/[controller]\")]\r\n\tpublic class CandidatesController : BaseController&ltCandidate,vCandidate,vCandidateRecord&gt\r\n    {\r\n        public CandidatesController(ICandidateUow uow):base(uow) {}\r\n    }\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= 'acessingtheapi'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Acessing The Api</h2>\r\n\r\n<p class='showHideElement' >For accessing the created Api, you must pass the JWT token which is generated when the authentication controller is called. For more information about creation of JWt web token Please refer <a class=\"redirect-link\" href=\"/rx-web-core/step-by-step-guide/run-the-project\">Login Api</a>.  </p>\r\n</div></div>\r\n"}