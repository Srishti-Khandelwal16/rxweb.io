{"rightSidebarLinks":[{"id":"component-content","title":"Component Contents","subLink":null},{"id":"componentcontents","title":"Component Contents","subLink":[{"title":"LanguageContentKeys Table","id":"languagecontentkeystable","thirdLevelLink":[]},{"title":"LangaugeContents Table","id":"langaugecontentstable","thirdLevelLink":[]},{"title":"ComponentLanguageContents","id":"componentlanguagecontents","thirdLevelLink":[]}]}],"title":"Component Contents","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/localization-and-globalization/component-content.md","category":"rxwebcore","subCategory":"localization-and-globalization","linkTitle":"component-content","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'componentcontents'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Component Contents</h1>\r\n\r\n<p class='showHideElement' >On the user interface, when multiple components are involved, each of them requires component specific multilingual data based upon which text of placeholder, label etc are displayed. Considering a scenario where the Country entity has three components : List, Add and Edit and they required different component contents. Here is an example of how CountryAdd component data will be formed.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'languagecontentkeystable'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>LanguageContentKeys Table</h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>LanguageContentKeyId</th><th>KeyName</th><th>IsComponent</th></tr>\r\n<tr><td>1</td><td>CountryAddComponent</td><td>1</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'langaugecontentstable'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>LangaugeContents Table</h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>LanguageContentId</th><th>LanguageContentKeyId</th><th>ContentType</th><th>En</th><th>Fr</th></tr>\r\n<tr><td>1</td><td>1</td><td>t</td><td>Allows Registration</td><td>Permet l'enregistrement</td></tr>\r\n</table>\r\n<blockquote class='showHideElement' ><p>Here contentType will denote the type of the content, here <span class='highlighted'>t</span> means text. For placeholder and label(p and l) respectively</p></blockquote>\r\n</div></div>\r\n<div class='row page-section' id= 'componentlanguagecontents'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>ComponentLanguageContents</h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>ComponentLanguageContentId</th><th>ComponentKeyId</th><th>LanguageContentId</th><th>En</th><th>Fr</th></tr>\r\n<tr><td>1</td><td>1</td><td>1</td><td>Allows Registration</td><td>Permet l'enregistrement</td></tr>\r\n</table>\r\n<p class='showHideElement' >The second step is to run the command : </p>\r\n<div class='model-ts'><pre><code>\r\nrxwebcore --localization --main \r\n</code></pre></div>\r\n<p class='showHideElement' >This will create <span class='highlighted'>.json</span> file with en and fr json in wwwroot folder of the languagecontents.</p>\r\n<strong>AddCountryComponent-en.json </strong>\r\n<div class='model-ts'><pre><code>\r\n{\"AddCountryComponent_t\":\"Allows Registration\"}\r\n</code></pre></div>\r\n<strong>AddCountryComponent-fr.json </strong>\r\n<div class='model-ts'><pre><code>\r\n{\"AddCountryComponent_t\":\"Permet l'enregistrement\"}\r\n</code></pre></div>\r\n<blockquote class='showHideElement' ><p>The users language will be stored in the Users table as a LanguageCode</p></blockquote>\r\n</div></div>\r\n"}