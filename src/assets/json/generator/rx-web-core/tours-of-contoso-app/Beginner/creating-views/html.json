{"rightSidebarLinks":[{"id":"creating-views","title":"Creating Views","subLink":null},{"id":"views","title":"Views","subLink":[{"title":"Pros while using views","id":"proswhileusingviews","thirdLevelLink":[]},{"title":"Real time scenario","id":"realtimescenario","thirdLevelLink":[]}]},{"id":"displayinglistofrecords","title":"Displaying list of records","subLink":[]},{"id":"displayinganyspecificrecordwhileediting","title":"Displaying any specific record while editing","subLink":[]},{"id":"bindingdatainadropdown","title":"Binding data in a dropdown","subLink":[]}],"title":"Creating Views","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/tours-of-contoso-app/beginner/creating-views.md","category":"rxwebcore","subCategory":"","linkTitle":"overview","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'views'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Views</h1>\r\n\r\n<p class='showHideElement' ><span class='highlighted'>Materialized view</span> is a database object (kind of virtual table) based on the result-set of any SQL query. <span class='highlighted'>Views</span> are needed when we want to recieve our desired resultset in other form. For example: In the previous section, i had created a table named <span class='highlighted'>Students</span> and in that table there was a column named <span class='highlighted'>CourseId</span> which stores the integer value. While displaying in the UI, i want to represnt in the <span class='highlighted'>CourseName</span> form. If i write this in query form by adding WHERE and JOIN, then it would be a little-bit complex query. In such cases, we can make views to make it more simpler.</p>\r\n<blockquote class='showHideElement' ><p>When you have limited number of records (0 - 1K), then view is a better option.</p></blockquote>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n<p class='showHideElement' >You will learn :</p>\r\n<ul class=\"bullet-list\">\r\n  <li class=\"overview-nav-item\">Pros while using views</li> \r\n  <li class=\"overview-nav-item\">Displaying list of records</li>\r\n  <li class=\"overview-nav-item\">Displaying any specific record while editing</li>\r\n  <li class=\"overview-nav-item\">Binding data in a dropdown</li>\r\n</ul>\r\n</div></div>\r\n<div class='row page-section' id= 'proswhileusingviews'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Pros while using views</h2>\r\n\r\n<ul>\r\n  <li><strong>Security</strong> - Each user can be given permission to access the database only through a small set of views that contain the specific data the user is authorized to see, thus restricting the user's access to stored data.</li>\r\n  <li><strong>Query Simplicity</strong> - Views help simplify complex queries. If you have any frequently used complex query, you can create a view based on it so that you can reference to the view by using a simple SELECT statement instead of typing the query all over again.</li>\r\n  <li><strong>Data Integrity</strong> - If data is accessed and entered through a view, the DBMS can automatically check the data to ensure that it meets the specified integrity constraints.</li>\r\n</ul>\r\n</div></div>\r\n<div class='row page-section' id= 'realtimescenario'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Real time scenario</h2>\r\n\r\n<p class='showHideElement' >If we consider our <span class='highlighted'>Contoso Application</span>, displaying students and course records is very frequent in the application. In the <a class=\"redirect\" href=\"\">previous step</a>, we have created the Students and Course table and now we want to retrieve those records. For that, we will create the views.</p>\r\n<p class='showHideElement' >Generally we deal with these below mentioned real-time scenarios in case of retrieving the stored information where making materialized view can be helpful.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'displayinglistofrecords'>\r\n<div class='col-lg-12'>\r\n<h3 class=title-level-3>Displaying list of records</h3>\r\n\r\n<p class='showHideElement' >There are cases when we want to display a list of students and their enrolled course name on the UI. For retriving that information we can use a materialized view. In such cases, view should be named as <span class='highlighted'>vCourses</span> or <span class='highlighted'>vStudents</span>.</p>\r\n<blockquote class='showHideElement' ><p>Just for the sake for our understanding, we use the abbreviation <strong><span class='highlighted'>v</span></strongthat stand for the word view. This maintain a consistency in the naming convention all over the application and to properly differenciate between a table and a view.</p></blockquote>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vStudents]\r\nAS\r\nSELECT    Students.StudentId, Students.RollNumber, Students.StudentName, Students.EmailId, Courses.CourseName\r\nFROM      Students, Courses\r\nWHERE     Students.CourseId = Courses.CourseId\r\nGO\r\n</code></pre></div>\r\n<p class='showHideElement' >Based on the above created view, below result set will be fetched.</p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>RollNumber</th><th>StudentName</th><th>EmailId</th><th>CourseName</th></tr>\r\n<tr><td>1002</td><td>John Doe</td><td>john.doe@contoso.com</td><td>B. Tech.</td></tr>\r\n<tr><td>1001</td><td>Alison Miller</td><td>alison.miller@contoso.com</td><td>MBA</td></tr>\r\n<tr><td>1003</td><td>Scarlett Joan</td><td>scarlett.joan@contoso.com</td><td>MBBS</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'displayinganyspecificrecordwhileediting'>\r\n<div class='col-lg-12'>\r\n<h3 class=title-level-3>Displaying any specific record while editing</h3>\r\n\r\n<p class='showHideElement' >While editting a record, we may need to display complete or some of the information for a specific record only. Here separate views are made for displaying list and editing a particular record because their might be a situation where there is a difference in displaying those columns. </p>\r\n<p class='showHideElement' >Let us consider a situation, i have to edit a student's details. In such cases, view should be named as <span class='highlighted'>vStudentRecords</span> (i.e. prefixing it with abbreviation <span class='highlighted'>v</span> and suffixing it with the word <span class='highlighted'>Records</span>).</p>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vStudentRecords]\r\nAS\r\nSELECT    Students.StudentId, Students.StudentName, Students.RollNumber, Students.Age, Students.Gender, Students.EmailId, Courses.CourseName\r\nFROM      Students, Courses\r\nWHERE     Students.CourseId = Courses.CourseId\r\nGO\r\n</code></pre></div>\r\n<p class='showHideElement' >Based on the above created view, below result set will be fetched.</p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>StudentName</th><th>RollNumber</th><th>Age</th><th>Gender</th><th>EmailId</th><th>CourseId</th></tr>\r\n<tr><td>John Doe</td><td>1002</td><td>20</td><td>Male</td><td>john.doe@contoso.com</td><td>B. Tech.</td></tr>\r\n<tr><td>Alison Miller</td><td>1001</td><td>21</td><td>Male</td><td>alison.miller@contoso.com</td><td>MBA</td></tr>\r\n<tr><td>Scarlett Joan</td><td>1003</td><td>19</td><td>Female</td><td>scarlett.joan@contoso.com</td><td>MBBS</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'bindingdatainadropdown'>\r\n<div class='col-lg-12'>\r\n<h3 class=title-level-3>Binding data in a dropdown</h3>\r\n\r\n<p class='showHideElement' >There are some columns which needs to be displayed in a dropdown while adding a new record or editing an existing record through UI. For that also we can use views to display any column records based on any condition.</p>\r\n<p class='showHideElement' >Let us consider a situation, i have to display all the names of courses in a dropdown while adding a new student, so that student can select the course in which he want to entroll. In these cases, view should be named as <span class='highlighted'>vCourseLookups</span> (i.e. prefixing it with abbreviation <span class='highlighted'>v</span> and suffixing it with the word <span class='highlighted'>Lookups</span>).</p>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vCourseLookups]\r\nAS\r\nSELECT    CourseId, CourseName\r\nFROM      Courses\r\nGO\r\n</code></pre></div>\r\n<p class='showHideElement' >Based on the above created view, below result set will be fetched.</p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>CourseId</th><th>CourseName</th></tr>\r\n<tr><td>1</td><td>B. Tech.</td></tr>\r\n<tr><td>2</td><td>M. Tech.</td></tr>\r\n<tr><td>3</td><td>MBBS</td></tr>\r\n<tr><td>4</td><td>CA</td></tr>\r\n<tr><td>5</td><td>MBA</td></tr>\r\n</table>\r\n</div></div>\r\n"}