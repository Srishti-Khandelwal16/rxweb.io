{"rightSidebarLinks":[{"id":"materialized-view","title":"Materialized View","subLink":null},{"id":"materializedview","title":"Materialized View","subLink":[{"title":"1. Displaying List of records","id":"1.displayinglistofrecords","thirdLevelLink":[]},{"title":"2. Displaying Data while Editing","id":"2.displayingdatawhileediting","thirdLevelLink":[]},{"title":"3. Binding data in a dropdown","id":"3.bindingdatainadropdown","thirdLevelLink":[]}]}],"title":"Materialized View","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/working-with-data-model/database-approach/materialized-view.md","category":"working-with-data-model","subCategory":"database-approach","linkTitle":"materializedview","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'materializedview'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Materialized View</h1>\r\n\r\n<p class='showHideElement' >To perform effective quering becomes much necessary when we want to recieve our desired resultset which depends upon many factors that is the size of the data, integrity of the data. For example you want to show the candidate data and the data is coming from the multiple tables instead of writing complex SQL query or LINQ query from C#, create a Materialized View, this saves the execution time as compared to other approaches. It requires less maintenance. Besides this the data in the views get high availability and resilency benefits.</p>\r\n<blockquote class='showHideElement' ><p>It is preferable to create a view if the number of records are limited upto 500 to 3k. If it exceeds it is preferable to create a [stored procedure] for it. The records criteria may change based upon the <span class='highlighted'>JOINS</span> are used in the view.</p></blockquote>\r\n<p class='showHideElement' >In our HumanResourceApplication we have to work on candidates functionality, As we have defined the candidates table and now we are going to define the views for getting the records. Here there are three cases where making materialized view can be helpful which are stated below:</p>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/Scripts/humanresource.sql#L142-L156\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n</div></div>\r\n<div class='row page-section' id= '1.displayinglistofrecords'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>1. Displaying List of records</h2>\r\n\r\n<p class='showHideElement' >Suppose we want to display a list of candidates, we will make a <span class='highlighted'>vCandidates</span> view for the same. Here Candidates id the table name and we add a abbreviation <span class='highlighted'>v</span> which is here meant for a view. We do this to maintain a consistency of the naming convention used all over the application. </p>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vCandidates]\r\nAS\r\nSELECT        CandidateId, FirstName, EmailId, Designation, Experience\r\nFROM            dbo.Candidates\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= '2.displayingdatawhileediting'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>2. Displaying Data while Editing</h2>\r\n\r\n<p class='showHideElement' >Now we want to display specific fields of the states while edit call, we will make <span class='highlighted'>vStateRecords</span>. We make seperate view for displaying list of records and editing because there might be some additional column or column value differing from list and edit. For example for displaying list you dont have StatusId column but in edit mode you want that column to be displayed. </p>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vCandidateRecords]\r\nAS\r\nSELECT        CandidateId, FirstName, EmailId, CountryId, Designation, Experience\r\nFROM            dbo.Candidates\r\nGO\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= '3.bindingdatainadropdown'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>3. Binding data in a dropdown</h2>\r\n\r\n<p class='showHideElement' >In some of the areas where we have to bind the name of the countries in the dropdown, in that case we have to define the lookup view of Countries the name should be <span class='highlighted'>vCountryLookups</span> in this case because we only need fields which are required in the lookup.</p>\r\n<div class='model-ts'><pre><code>\r\nCREATE VIEW [dbo].[vCountryLookups]\r\nAS\r\nSELECT       CountryId, CountryName\r\nFROM            dbo.Countries\r\nGO\r\n</code></pre></div>\r\n</div></div>\r\n"}