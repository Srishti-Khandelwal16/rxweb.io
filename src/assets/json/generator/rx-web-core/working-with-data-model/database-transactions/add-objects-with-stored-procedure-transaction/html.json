{"rightSidebarLinks":[{"id":"add-objects-with-stored-procedure-transaction","title":"Adding Objects With Store Procedure Transaction","subLink":null},{"id":"addingobjectswithstoreproceduretransaction","title":"Adding Objects With Store Procedure Transaction","subLink":[{"title":"Begin Transaction","id":"begintransaction","thirdLevelLink":[]},{"title":"Commit","id":"commit","thirdLevelLink":[]},{"title":"RollbackTransaction","id":"rollbacktransaction","thirdLevelLink":[]},{"title":"StoreProc","id":"storeproc","thirdLevelLink":[]},{"title":"Scenario","id":"scenario","thirdLevelLink":[]},{"title":"Step 1 :","id":"step1:","thirdLevelLink":[]},{"title":"Step 2 :","id":"step2:","thirdLevelLink":[]},{"title":"Step 3:","id":"step3:","thirdLevelLink":[]},{"title":"Step 4:","id":"step4:","thirdLevelLink":[]}]}],"title":"Adding Objects With Store Procedure Transaction","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/working-with-data-model/database-transactions/add-objects-with-stored-procedure-transaction.md","category":"working-with-data-model","subCategory":"","linkTitle":"storedproceduretransaction","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'addingobjectswithstoreproceduretransaction'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Adding Objects With Store Procedure Transaction</h1>\r\n\r\n<p class='showHideElement' >The database operations are done with the help of Uow methods, but when complex data operations are involved it is managed using <span class='highlighted'>DbContextManager</span>. It seperates the query execution of stored procedure and the begin transaction, commit process.</p>\r\n<p class='showHideElement' >It provides methods which are used to begin transaction, rollback transaction, commit transaction and executing sql query. It works on the principle of CQRS(command query responsibility segregation) which works on the basis of CommandQuerySeperation which states that Queries are used to retrieve a result set and command are used to change the state of the object but does not return anything.</p>\r\n<p class='showHideElement' >It includes these steps while performing complex data operations.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'begintransaction'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Begin Transaction</h2>\r\n\r\n<p class='showHideElement' >It is used to begin a transaction before executing the operations in the stored procedure.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'commit'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Commit</h2>\r\n\r\n<p class='showHideElement' >It is used to commit changes in the database after execution of the operation when the entity state is modified based upon entity framework core methods and stored procedure both.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'rollbacktransaction'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>RollbackTransaction</h2>\r\n\r\n<p class='showHideElement' >It is used to rollback the transaction before commiting the changes to the database.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'storeproc'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>StoreProc</h2>\r\n\r\n<p class='showHideElement' >It is used for executing  sql queries to fetch a result from stored procedure.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'scenario'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Scenario</h2>\r\n\r\n<p class='showHideElement' >Let's consider a scenario where you want to save candidate's  availability in which you have two tables Candidates and CandidateAvailabilities</p>\r\n<p class='showHideElement' >Insertion of Candidate can be maintained by <span class='highlighted'>RegisterNewAsync</span> method of Uow but CandidateAvailabilities can be inserted with the help of stored procedure because the data to be inserted in the candidateAvailailities require more data to be inserted. For E.g per day 96 slots of candidates are inserted. </p>\r\n<p class='showHideElement' >Candidate Table:</p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>CandidateId</th><th>FirstName</th><th>EmailId</th><th>Designation</th><th>Experience</th></tr>\r\n<tr><td>1</td><td>John</td><td>johnd@gmail.com</td><td>Software Engineering</td><td>2</td></tr>\r\n<tr><td>2</td><td>Bharat</td><td>bharatp@gmail.com</td><td>Software Engineering</td><td>2</td></tr>\r\n</table>\r\n<p class='showHideElement' >CandidateAvailabilities Table:</p>\r\n<table class=\"table table-bordered\">\r\n<tr><th>CandidateAvailabilityId</th><th>AvailableDate</th><th>FromTime</th><th>ToTime</th><th>CandidateId</th></tr>\r\n<tr><td>1</td><td>2019-05-01 00:00:00.000</td><td>10:15:00</td><td>10:30:00</td><td>1</td></tr>\r\n<tr><td>1</td><td>2019-04-01 00:00:00.000</td><td>10:30:00</td><td>10:40:00</td><td>2</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'step1'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Step 1 :</h2>\r\n\r\n<p class='showHideElement' >Add the Candidate's details using <span class='highlighted'>RegisterNewAsync</span> method of Uow. Perform <span class='highlighted'>CommitAsync</span> on it.</p>\r\n<div class='model-ts'><pre><code>\r\nCandidateUow.RegisterNewAsync(candidate);\r\nCandidateUow.CommitAsync();\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= 'step2'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Step 2 :</h2>\r\n\r\n<p class='showHideElement' >Begin Transaction using <span class='highlighted'>BeginTransaction</span> method of DbContextManger.</p>\r\n<div class='model-ts'><pre><code>\r\nDbContextManager.BeginTransaction();\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= 'step3'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Step 3:</h2>\r\n\r\n<p class='showHideElement' >Insert Candidate's Availabilites using <span class='highlighted'>StoreProc</span> by passing necessary parameters.</p>\r\n<div class='model-ts'><pre><code>\r\nvar result = await DbContextManager.StoreProc&ltStoreProcResult&gt(\"[dbo].spInsertcandidateAvailabilities\", spParameters);\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= 'step4'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Step 4:</h2>\r\n\r\n<p class='showHideElement' >Executing try and catch to commit or rollback transaction.</p>\r\n<div class='model-ts'><pre><code>\r\ntry\r\n{\r\n    DbContextManager.Commit();\r\n}\r\ncatch(Exception e)\r\n{\r\n    DbContextManager.RollbackTransaction();\r\n}\r\n</code></pre></div>\r\n</div></div>\r\n"}