{"rightSidebarLinks":[{"id":"generating-data-models","title":"Generating Data Models","subLink":null},{"id":"generatingdatamodels","title":"Generating Data Models","subLink":[{"title":"Generate POCO Model","id":"generatepocomodel","thirdLevelLink":[]},{"title":"Country Model class","id":"countrymodelclass","thirdLevelLink":[]}]}],"title":"Generating Data Models","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/working-with-data-model/generating-data-models.md","category":"working-with-data-model","subCategory":"","linkTitle":"datamodels","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'generatingdatamodels'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Generating Data Models</h1>\r\n\r\n<p class='showHideElement' >Data models are POCO models which have database entity objects as properties which are further used while working with data. As in the earlier section we have discussed about the database provider and how the database objects are created, In this section we will generated models class of the tables and views which are present in the database.    </p>\r\n</div></div>\r\n<div class='row page-section' id= 'generatepocomodel'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Generate POCO Model</h2>\r\n\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/HumanResourceApplication.Models/DbEntities/Main/Country.cs\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n<p class='showHideElement' ><span class='highlighted'>POCO</span> means <span class='highlighted'>Plain Old CLR Object</span>. POCO Entity is a class that doesn't depend on any framework-specific base class. These models act as a data carriers and has validation and any other business logic you want to implement. </p>\r\n<blockquote class='showHideElement' ><p>POCO model must be publically accessible.</p></blockquote>\r\n<p class='showHideElement' >Database entities which can be generated as POCO models are:</p>\r\n<ul class=\"bullet-list\">\r\n    <li>Tables</li>\r\n    <li>Views</li>\r\n</ul>\r\n<p class='showHideElement' >you can create POCO models for all the required tables and views. For creating their POCO models in the application, open the <span class='highlighted'>Package Manager Console</span> and run the following command:</p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --models --main\r\n</code></pre></div>\r\n<p class='showHideElement' >In the above command, --models denotes model generation and --main is the database connection name configured in the <span class='highlighted'>appsettings.json</span>.</p>\r\n<p class='showHideElement' >This will generate POCO models for all the tables and views in the <span class='highlighted'>DbEntities</span> folder inside the <span class='highlighted'>Models</span> section of the project.</p>\r\n<p class='showHideElement' >The below model classes are data model classes of the tables that we have generated in the <a class=\"redirect-link\"  href=\"/rx-web-core/working-with-data-model/database-approach/creating-tables\">Tables</a> sections.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'countrymodelclass'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Country Model class</h2>\r\n\r\n<p class='showHideElement' >Model class of the country table with generated validation annotations.</p>\r\n<div highlight='pre code'><pre><code>\r\n[Table(\"Countries\",Schema=\"dbo\")]\r\npublic partial class Country\r\n{\r\n    #region CountryId Annotations\r\n    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]\r\n    [System.ComponentModel.DataAnnotations.Key]\r\n    #endregion CountryId Annotations\r\n    public int CountryId { get; set; }\r\n    #region CountryName Annotations\r\n    [MaxLength(10)]\r\n    #endregion CountryName Annotations\r\n    public string CountryName { get; set; }\r\n    #endregion StatusId Annotations\r\n    public int CountryId { get; set; }\r\n    #endregion StatusId Annotations\r\n    public int StatusId { get; set; }\r\n    #endregion LanguageId Annotations\r\n    public int LanguageId { get; set; }\r\n    #region Countries Annotations\r\n    [InverseProperty(\"Client\")]\r\n    #endregion Countries Annotations\r\n    public virtual ICollection&ltCandidate&gt Countries { get; set; }\r\n    public Client()\r\n    {\r\n        Candidates = new HashSet&ltCandidate&gt();\r\n    }\r\n}\r\n</code></pre></div>\r\n</div></div>\r\n"}