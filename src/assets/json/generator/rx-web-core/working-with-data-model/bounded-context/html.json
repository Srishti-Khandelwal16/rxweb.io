{"rightSidebarLinks":[{"id":"bounded-context","title":"Bounded Context","subLink":null},{"id":"boundedcontext","title":"Bounded Context","subLink":[{"title":"Overview","id":"overview","thirdLevelLink":[]},{"title":"Scenario","id":"scenario","thirdLevelLink":[]},{"title":"Create Bounded Context","id":"createboundedcontext","thirdLevelLink":[]},{"title":"Add Database Entities","id":"adddatabaseentities","thirdLevelLink":[]},{"title":"Create Lookup context","id":"createlookupcontext","thirdLevelLink":[]}]}],"title":"Bounded Context","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/working-with-data-model/bounded-context.md","category":"working-with-data-model","subCategory":"","linkTitle":"boundedcontext","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'boundedcontext'>\r\n<div class='col-lg-12'>\r\n<h1 class=title-level-1>Bounded Context</h1>\r\n\r\n</div></div>\r\n<div class='row page-section' id= 'overview'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Overview</h2>\r\n\r\n<p class='showHideElement' >There are some scenarios when you have to deal with too many tables, then it becomes difficult to manage those tables. For such problems <span class='highlighted'>Bounded context design pattern</span> or <span class='highlighted'>Domain-Driven Design</span> can be a solution.</p>\r\n<p class='showHideElement' ><span class='highlighted'>Bounded context design pattern</span> can help you in maintaining a well structured application. This represents a logical and tangible boundery which will structurize the bigger application in terms of modules and domain. It is the core part of this strategic design pattern of <span class='highlighted'>Domain-Driven approach</span>. The core concept of this design pattern is mainly focused on the models and structuring them based on the their fundamental context. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'scenario'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Scenario</h2>\r\n\r\n<p class='showHideElement' >This will be helpful in those cases where we are building a large enterprise application. All features are segregated into the modules. So we take the advantage of bounded context and create the context modules wise based upon the Application needs. This gives us a comfort to add/remove the entity into the specific context without hindering to other modules(in terms of context).</p>\r\n<p class='showHideElement' >In our HRManagementSystem we have three main modules. They are Resource Management, Candidate Module and User Module. Let's see how to make module wise <span class='highlighted'>BoundedContext</span> using rxwebcore CLI commands.</p>\r\n<p class='showHideElement' >In the package manager console, run this command to create a BoundedContext</p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --context --main &ltContext_Name&gt\r\n</code></pre></div>\r\n<p class='showHideElement' >Parameters of creating a context </p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Parameter</th><th>Description</th></tr>\r\n<tr><td>--context</td><td>For generating BoundedContext</td></tr>\r\n<tr><td>--main</td><td>key of the database connectionString mentioned in <span class='highlighted'>appsettings.json</span></td></tr>\r\n<tr><td>Context_Name</td><td>Name of the context</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'createboundedcontext'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Create Bounded Context</h2>\r\n\r\n<p class='showHideElement' >Now lets create Resource Management, Candidate Module and User Modules. we will start with  Module and add Database models into it.</p>\r\n<strong>Step 1 : Create Bounded Context</strong>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --context --main Candidate\r\n</code></pre></div>\r\n<p class='showHideElement' >This will create <span class='highlighted'>CandidateContext.cs</span> in the main folder of DbContext folder in the <span class='highlighted'>HRManagementSystem.BoundedContext</span> project of the application. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'adddatabaseentities'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Add Database Entities</h2>\r\n\r\n<strong>Step 2 : Add models into it</strong>\r\n<p class='showHideElement' >To add models into the context, run this command in the package manager console</p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --context --main &ltContext_Name&gt --add-models <Model_Name>\r\n</code></pre></div>\r\n<p class='showHideElement' >We will add models(DbSets) into the Candidate Context.</p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --context --main Candidate --add-models Candidates\r\n</code></pre></div>\r\n<blockquote class='showHideElement' ><p>This will add tables and views of the particular entity in the context.</p></blockquote>\r\n<strong>CandidateContext.cs: </strong>\r\n<div class='model-ts'><pre><code>\r\n public class CandidateContext : BaseBoundedDbContext, ICandidateContext\r\n    {\r\n        public CandidateContext(MainSqlDbContext sqlDbContext,  IOptions&ltDatabaseConfig&gt databaseConfig, IHttpContextAccessor contextAccessor,TenantDbConnectionInfo tenantDbConnection): base(sqlDbContext, databaseConfig.Value, contextAccessor,tenantDbConnection){ }\r\n        #region DbSets\r\n        public DbSet&ltvCandidateRecords&gt vCandidateRecords { get; set; }\r\n        public DbSet&ltvCandidates&gt vCandidates { get; set; }\r\n        public DbSet&ltCandidate&gt Candidates { get; set; }\r\n        #endregion DbSets\r\n    }\r\n    public interface ICandidateContext : IDbContext\r\n    {\r\n    }\r\n</code></pre></div>\r\n<p class='showHideElement' >With the creation of BoundedContext, its UnitOfWork will be generated which will be further used in the API to interact with the data. To get further information about UnitOfWork Please refer this <a href=\"/rx-web-core/working-with-data-model/data-operations/overview\" class=\"redirect-link\" target=\"_blank\">link.</a></p>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/HumanResourceApplication.BoundedContext/DbContext/Main/CandidateContext.cs\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n</div></div>\r\n<div class='row page-section' id= 'createlookupcontext'>\r\n<div class='col-lg-12'>\r\n<h2 class=title-level-2>Create Lookup context</h2>\r\n\r\n<p class='showHideElement' >lookup context contains DbSets of lookups used to bind dropdowns of the context in the application. </p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --context main CandidateLookup --add-models Countries\r\n</code></pre></div>\r\n<strong>CandidateLookupContext.cs: </strong>\r\n<div class='model-ts'><pre><code>\r\n public class CandidateLookupContext : BaseBoundedDbContext, ICandidateLookupContext\r\n    {\r\n        public CandidateLookupContext(MainSqlDbContext sqlDbContext,  IOptions<DatabaseConfig> databaseConfig, IHttpContextAccessor contextAccessor,TenantDbConnectionInfo tenantDbConnection): base(sqlDbContext, databaseConfig.Value, contextAccessor,tenantDbConnection){ }\r\n        #region DbSets\r\n        public DbSet&ltvCountryRecords&gt vCountryRecords { get; set; }\r\n        public DbSet&ltvCountries&gt vCountries { get; set; }\r\n        public DbSet&ltCountry&gt Candidates { get; set; }\r\n        #endregion DbSets\r\n    }\r\n    public interface ICandidateLookupContext : IDbContext\r\n    {\r\n    }\r\n</code></pre></div>\r\n<a role=\"button\" target=\"_blank\" class=\"git-link-button\" href=\"https://github.com/rxweb/RxWebCore/blob/master/src/Samples/AspNetCore/Documentation%20Examples/HumanResourceApplication/HumanResourceApplication.BoundedContext/DbContext/Main/CandidateLookupContext.cs\"><span style=\"vertical-align: middle\">Download the Code</span><img class=\"_3-99 img\" src=\"https://scontent.famd5-1.fna.fbcdn.net/v/t39.2365-6/21630666_872184906282544_8997395837269049344_n.png?_nc_cat=106&amp;_nc_ohc=ixvAzbNREvgAX9AAb7C&amp;_nc_ht=scontent.famd5-1.fna&amp;oh=738ee91e1ae8331712186222788828a0&amp;oe=5ED55A8A\" height=\"25\" alt=\"\" style=\"vertical-align:middle;margin-left: 4px;max-width: 654px;\"></a>\r\n</div></div>\r\n"}