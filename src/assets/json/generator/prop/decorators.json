{"rightSidebarLinks":[{"id":"prop","title":"prop (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicpropdecorator","title":"Basic prop decorator","subLink":[]},{"id":"bindingnameofserversideproperty","title":"Binding Name of server side property","subLink":[]},{"id":"setdefaultvalue","title":"Set Default Value","subLink":[]},{"id":"excludepropertiesconditionally","title":"Exclude properties conditionally","subLink":[]},{"id":"isprimarykey","title":"isPrimaryKey","subLink":[]}],"title":"prop","description":"It is used to define a property of a field in the model class.","validatorType":"decorators","validationTypeTitle":"Decorators","type":"decorators","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/decorators/prop.md","category":"decorators","subCategory":"","linkTitle":"prop","tabArray":{},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>prop</p></div> <div class=\"title-bar\"><p>It is used to define a property of a field in the model class.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h1class= class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#whentouse'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>When to use<a title='Link to this heading' class='link-header' href='/decorators/prop#whentouse'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form, which contains fields like emailAddress and you want to use the prop decorator on that field.</p>\r\n<p class='showHideElement' >Let's see how @prop() decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicpropdecorator'>\r\n<div class='col-lg-12'>\r\n<h1 class=>Basic prop decorator<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#basicpropdecorator'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>Basic prop decorator<a title='Link to this heading' class='link-header' href='/decorators/prop#basicpropdecorator'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >First we need to create a user model and define a property of emailAddress in the model to achieve the functional need.</p>\r\n<div component=\"app-code\" key=\"prop-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<div component=\"app-code\" key=\"prop-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"prop-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-prop-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'bindingnameofserversideproperty'>\r\n<div class='col-lg-12'>\r\n<h1 class=>Binding Name of server side property<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#bindingnameofserversideproperty'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>Binding Name of server side property<a title='Link to this heading' class='link-header' href='/decorators/prop#bindingnameofserversideproperty'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >If the client property name and server property name is different. Then to bind the server property name to client side.</p>\r\n<div component=\"app-example-runner\" ref-component=\"app-prop-server\" title=\"Binding server side name with prop\" key=\"server\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'setdefaultvalue'>\r\n<div class='col-lg-12'>\r\n<h1 class=>Set Default Value<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#setdefaultvalue'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>Set Default Value<a title='Link to this heading' class='link-header' href='/decorators/prop#setdefaultvalue'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >When you want to set the default value of the property, you have to set the default value in multiple components white creating the FormGroup,Instead of that use an efficient way to set default value,It should be applied via decorator on property.</p>\r\n<div component=\"app-example-runner\" ref-component=\"app-prop-default\" title=\"Setting default value with prop\" key=\"default\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'excludepropertiesconditionally'>\r\n<div class='col-lg-12'>\r\n<h1 class=>Exclude properties conditionally<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#excludepropertiesconditionally'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>Exclude properties conditionally<a title='Link to this heading' class='link-header' href='/decorators/prop#excludepropertiesconditionally'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >When you want to exclude the properties based upon some specific condition, You must add <span class='highlighted'>ignore</span> property in the <span class='highlighted'>propConfig</span>.</p>\r\n<div component=\"app-example-runner\" ref-component=\"app-prop-exclude\" title=\"exclude with prop\" key=\"exclude\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'isprimarykey'>\r\n<div class='col-lg-12'>\r\n<h1 class=>isPrimaryKey<a title='Link to this heading' class='link-header' href='/decorators/prop/decorators#isprimarykey'><i class='fa fa-link'></i></a></h1>\r\n<h1 class=>isPrimaryKey<a title='Link to this heading' class='link-header' href='/decorators/prop#isprimarykey'><i class='fa fa-link'></i></a></h1>\r\n\r\n<p class='showHideElement' >It is used to define the primary key of the model, You need to set <span class='highlighted'>isPrimaryKey</span> property true.</p>\r\n<div component=\"app-example-runner\" ref-component=\"app-prop-primary\" title=\"primary key with prop\" key=\"primary\"></div>\r\n</div></div>\r\n"}