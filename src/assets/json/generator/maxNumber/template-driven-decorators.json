{"rightSidebarLinks":[{"id":"maxnumber","title":"maxNumber (Template Driven Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicmaxnumbervalidation","title":"Basic MaxNumber Validation","subLink":[]},{"id":"numberconfig","title":"NumberConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]},{"title":"value","id":"value","thirdLevelLink":[]}]},{"id":"completemaxnumberexample","title":"Complete MaxNumber Example","subLink":[]},{"id":"githubissues","title":"maxNumber Github Issues","subLink":null}],"title":"maxNumber","description":"MaxNumber validation  template driven  will allow user to enter the input upto the maximum number value parameter.","validatorType":"template-driven","validationTypeTitle":"Template Driven Decorator","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/validation-decorators/maxNumber.md","category":"form-validations","subCategory":null,"linkTitle":"maxNumber","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-maxNumber-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"maxNumber-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"maxNumber-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"maxNumber-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>maxNumber</p></div> <div class=\"title-bar\"><p>maxNumber validation  template driven  will allow user to enter the input upto the maximum number value parameter.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href=''/form-validations/maxNumber/template-driven/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Subject-detail form, which contains fields like subjectCode, maximumMarks, PassingMarks and you want the user to enter valid  Number which does not exceed the Maximum number. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n<li>Adding field of PassingMarks without any conditional expression.</li>\r\n<li>Apply MaxNumber validation based on matched condition in the form, like if the subjectCode is ‘8CS5A’ then the maximumMarks value should be enter valid  Number which does not exceed the Maximum number .</li>\r\n<li>Adding Custom Message on PassingMarks Field.</li>\r\n<li>Adding value which you want to restrict number in the property. The maximum number is '100s'. </li>\r\n<li>Shows the custom message on <span class='highlighted'>Economics</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how maxNumber template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicmaxnumbervalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic MaxNumber Validation<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#basicmaxnumbervalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create subject-detail model class define a property of PassingMarks in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"maxNumber-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"maxNumber-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"maxNumber-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxNumber-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'numberconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >NumberConfig<a title='Link to this heading' class='link-header' href=''/form-validations/maxNumber/template-driven/decorators#numberconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>maxNumber</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Max number validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td>Enter value which you want to restrict number in the property</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Max Number validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function.</p>\r\n<blockquote class='showHideElement' ><p>This won't work if you return without expression or fixed boolean value true or false; like : <span class='highlighted'>conditionalExpression: (x) =x.toggle</span></p></blockquote>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"maxNumber-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxNumber-conditionalExpression\" title=\"maxNumber template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"maxNumber-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxNumber-message\" title=\"maxNumber template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"maxNumber-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxNumber-messageKey\" title=\"maxNumber template driven with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>number</span> </p>\r\n<p class='showHideElement' >enter value which you want to restrict number in the property.</p>\r\n<div component=\"app-code\" key=\"maxNumber-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxNumber-value\" title=\"maxNumber template driven with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completemaxnumberexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete MaxNumber Example<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/decorators#completemaxnumberexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete MaxNumber example which includes all the NumberConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/maxNumber/template-driven/directives#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}