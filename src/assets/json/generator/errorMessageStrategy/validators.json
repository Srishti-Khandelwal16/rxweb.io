{"rightSidebarLinks":[{"id":"globally bind error message strategy","title":"Globally Bind Error Message Strategy","subLink":null},{"id":"errorbindingstrategy.onsubmit","title":"ErrorBindingStrategy.OnSubmit","subLink":[]},{"id":"errorbindingstrategy.ondirty","title":"ErrorBindingStrategy.OnDirty","subLink":[]},{"id":"errorbindingstrategy.ontouched","title":"ErrorBindingStrategy.OnTouched","subLink":[]},{"id":"errorbindingstrategy.ondirtyortouched","title":"ErrorBindingStrategy.OnDirtyOrTouched","subLink":[]},{"id":"errorbindingstrategy.ondirtyorsubmit","title":"ErrorBindingStrategy.OnDirtyOrSubmit","subLink":[]},{"id":"errorbindingstrategy.ontouchedorsubmit","title":"ErrorBindingStrategy.OnTouchedOrSubmit","subLink":[]},{"id":"example","title":"Example","subLink":[]}],"title":"Globally Bind Error Message Strategy","description":"","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/how-to/errorMessageStrategy.md","category":"how-to","subCategory":"","linkTitle":"errorMessageStrategy","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >Whenever we want to bind error message conditionally while validating formControls in reactive forms, we bind it through error or model decorator but when the scenario arises that you have the same error message strategy throughout the application, it becomes bulky and unmanageable to declare it on every model. One better approach to that is configuring the errorbinding strategy globally </p>\r\n<p class='showHideElement' >If your form has nested formGroup or formArray then you dont need to set the property true of every nested formGroups and formArrays, you just have to set it true of the root formGroup only. </p>\r\n<p class='showHideElement' >To configure the errorBindingStrategy throughout the application. please refer <a href=\"api/reactive-form-config#errorMessageStrategy\"><span class='highlighted'>ReactiveFormConfig</span></a></p>\r\n<p class='showHideElement' >If you are using error or model decorator it will override the global message binding strategy of particular formControl or formGroup</p>\r\n<p class='showHideElement' >Based upon your need you can set the errorMessageBindingStrategy to these Strategies:</p>\r\n<div class='row page-section' id= 'errorbindingstrategy.onsubmit'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnSubmit<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.onsubmit'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Whenever the <span class='highlighted'>RxFormGroup</span> property <span class='highlighted'>submitted</span> is true then the invalid FormControl error messages will be bind.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'errorbindingstrategy.ondirty'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnDirty<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.ondirty'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Once the FormControl is dirty, after that invalid FormControl error messages will be bind accordingly. The FormControl should be marked as dirty using <span class='highlighted'>markAsDirty()</span></p>\r\n</div></div>\r\n<div class='row page-section' id= 'errorbindingstrategy.ontouched'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnTouched<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.ontouched'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Once the FormControl is touched, after that invalid FormControl error messages will be bind when we set accordingly, The FormControl should be marked as touched using <span class='highlighted'>markAsTouched()</span></p>\r\n</div></div>\r\n<div class='row page-section' id= 'errorbindingstrategy.ondirtyortouched'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnDirtyOrTouched<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.ondirtyortouched'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Once the FormControl is Dirty or Touched, after that invalid FormControl error messages will be bind accordingly.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'errorbindingstrategy.ondirtyorsubmit'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnDirtyOrSubmit<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.ondirtyorsubmit'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Once the FormControl is Dirty or Submitted, after that invalid FormControl error messages will be bind accordingly.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'errorbindingstrategy.ontouchedorsubmit'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ErrorBindingStrategy.OnTouchedOrSubmit<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#errorbindingstrategy.ontouchedorsubmit'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Once the FormControl is Dirty or Touched, after that invalid FormControl error messages will be bind accordingly.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'example'>\r\n<div class='col-lg-12'>\r\n<h2>Example<a title='Link to this heading' class='link-header' href='/how-to/errorMessageStrategy/validators#example'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >To configure the errorBindingStrategy throughout the application, In this example the ErrorBindingStrategy is set to <span class='highlighted'>OnSubmit</span> and that will work accordingly.</p>\r\n<div component=\"app-code\" key=\"errormessagestrategy-reactiveForm-component\"></div> \r\n<p class='showHideElement' >This is example of <span class='highlighted'>ErrorBindingStrategy.OnSubmit</span> in which all the errorMessage of formControl will bind on submit click when the <span class='highlighted'>submitted</span> property is set true.</p>\r\n<div component=\"app-code\" key=\"errormessagestrategy-onsubmit-component\"></div> \r\n<div component=\"app-code\" key=\"errormessagestrategy-onsubmit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-errormessagestrategy-onsubmit\"></div>\r\n</div></div>\r\n"}